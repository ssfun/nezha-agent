name: Build and Push Docker Image

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force rebuild even if no new version is found (true/false)'
        required: false
        default: 'false'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Fetch the latest Nezha Agent release version
      - name: Check for Nezha Agent updates
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/nezhahq/agent/releases/latest | jq -r '.tag_name')
          if [[ -z "$LATEST_VERSION" ]]; then
            echo "Failed to get latest version" >&2
            exit 1
          fi
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
          echo "LATEST_VERSION is $LATEST_VERSION"

      # Build and push the multi-architecture Docker image
      - name: Build and push multi-arch Docker image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
            --build-arg VERSION=${{ env.LATEST_VERSION }} \
            --tag sfun/nezha-agent:${{ env.LATEST_VERSION }} \
            --tag sfun/nezha-agent:latest \
            --push \
            .

      # Save the Docker image as a tar archive
      - name: Save Docker image as tar archive
        if: env.LATEST_VERSION != env.CURRENT_VERSION || github.event.inputs.force_build == 'true'
        run: |
          mkdir -p release
          docker pull sfun/nezha-agent:${{ env.LATEST_VERSION }} --platform linux/amd64
          docker save sfun/nezha-agent:${{ env.LATEST_VERSION }} -o release/nezha-agent-amd64.tar
          docker pull sfun/nezha-agent:${{ env.LATEST_VERSION }} --platform linux/arm64
          docker save sfun/nezha-agent:${{ env.LATEST_VERSION }} -o release/nezha-agent-arm64.tar

      # Compress the tar archives
      - name: Compress tar archives
        if: env.LATEST_VERSION != env.CURRENT_VERSION || github.event.inputs.force_build == 'true'
        run: |
          cd release
          gzip nezha-agent-amd64.tar
          gzip nezha-agent-arm64.tar

      # Create a new GitHub Release and upload the tar archives
      - name: Create GitHub Release
        if: env.LATEST_VERSION != env.CURRENT_VERSION || github.event.inputs.force_build == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.LATEST_VERSION }}
          files: |
            release/nezha-agent-amd64.tar.gz
            release/nezha-agent-arm64.tar.gz
